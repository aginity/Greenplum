{"entities":[{"fqn":"/Community Queries","id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","parent_folder_id":"bb6de4af-1aad-493e-a9ee-b3e75cf58ed7","name":"Community Queries","entity_type":"FOLDER"},{"fqn":"/Community Queries/Greenplum/Data Engineering/Generate a Time Dimension","id":"1bd03304-9855-4723-a13a-f137e4edf00d","parent_folder_id":"356c6a9b-7e6d-4dc4-9d20-c11768dad80b","name":"Generate a Time Dimension","entity_type":"SQL_ENTITY","description":"This set of queries will generate a DIM_DATE table with regularly columns and data to trend by.  You must enter a parameter of number of days to generate","content":"\r\n\r\ndrop table if exists numbers;\r\ncreate table numbers\r\n(\r\n  number int PRIMARY KEY\r\n)\r\n;\r\n\r\n-- typically you will choose 2000-3000 rows.  Each row generated represents a day so if you want to \r\n-- generate for 1 year you put 365.\r\n\r\nselect  'truncate table numbers;'\r\nunion all\r\nselect 'insert into numbers values '\r\nunion all \r\nselect '(0)'\r\nunion all \r\nSELECT ',(' || generate_series(1,$enter_number_of_date_rows_to_generate,1) || ')'\r\nunion all \r\nselect ';' \r\n;\r\n\r\n--Cut and paste from query above into insert statement example shown below\r\n--Make sure that you have your preferences set higher than the number of rows you generated e.g. \r\n--if you put in 3000 for the generate series parameter you need to make sure your preferences are > 3000\r\n\r\n/*\r\ntruncate table numbers;\r\ninsert into numbers values \r\n(0)\r\n,(1)\r\n,(2)\r\n,(3)\r\n;\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\ndrop table if exists dim_date;\r\nCREATE TABLE dim_date (\r\n  DateKey              INTEGER                     NOT NULL PRIMARY KEY,\r\n\r\n  -- DATE\r\n  BusinessDayDate            DATE                        NOT NULL,\r\n\r\n  -- YEAR\r\n  YearNumber          SMALLINT                    NOT NULL,\r\n  YearWeekNumber     SMALLINT                    NOT NULL,\r\n  YearDayNumber      SMALLINT                    NOT NULL,\r\n\r\n  -- QUARTER\r\n  QtrNumber           SMALLINT                    NOT NULL,\r\n\r\n  -- MONTH\r\n  MonthNumber         SMALLINT                    NOT NULL,\r\n  MonthName           CHAR(9)                     NOT NULL,\r\n  MonthDayNumber     SMALLINT                    NOT NULL,\r\n\r\n  -- WEEK\r\n  WeekDayNumber      SMALLINT                    NOT NULL,\r\n  WeekStart      DATE                        NOT NULL,\r\n  WeekEnd        DATE                        NOT NULL,\r\n\r\n  -- DAY\r\n  DayName             CHAR(9)                     NOT NULL,\r\n  DayIsWeekday       SMALLINT                    NOT NULL,\r\n  DayIsLastOfMonth SMALLINT                    NOT NULL\r\n) \r\n;\r\n\r\ntruncate table dim_date;\r\nINSERT INTO dim_date\r\n(\r\n   DateKey\r\n  ,BusinessDayDate\r\n  ,YearNumber\r\n  ,YearWeekNumber\r\n  ,YearDayNumber\r\n\r\n  -- QUARTER\r\n  ,QtrNumber\r\n\r\n  -- MONTH\r\n  ,MonthNumber\r\n  ,MonthName\r\n  ,MonthDayNumber\r\n\r\n  -- WEEK\r\n  ,WeekDayNumber\r\n  ,WeekStart\r\n  ,WeekEnd\r\n\r\n  -- DAY\r\n  ,DayName\r\n  ,DayIsWeekday\r\n  ,DayIsLastOfMonth\r\n)\r\n  SELECT\r\n    cast(seq + 1 AS INTEGER)                                      AS DateKey,\r\n\r\n    -- DATE\r\n    datum                                                         AS BusinessDayDate,\r\n\r\n    -- YEAR\r\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS YearNumber,\r\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS YearWeekNumber,\r\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS YearDayNumber,\r\n\r\n    -- QUARTER\r\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS QtrNumber,\r\n\r\n    -- MONTH\r\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS MonthNumber,\r\n    to_char(datum, 'Month')                                       AS MonthName,\r\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS MonthDayNumber,\r\n\r\n    -- WEEK\r\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS WeekDayNumber,\r\n    date_trunc('week',datum)                                    AS WeekStart,\r\n    date_trunc('week',datum+7)                                   AS WeekEnd,\r\n\r\n    -- DAY\r\n    to_char(datum, 'Day')                                         AS DayName,\r\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\r\n      THEN 0\r\n    ELSE 1 END                                                    AS DayIsWeekday,\r\n    CASE WHEN\r\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\r\n                        INTERVAL '1' MONTH) :: DATE -\r\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\r\n      THEN 1\r\n    ELSE 0 END                                                    AS DayIsLastOfMonth\r\n  FROM\r\n    -- Generate days for 81 years starting from 2000.\r\n    (\r\n      SELECT\r\n        '2016-01-01' :: DATE + number AS datum,\r\n        number                        AS seq\r\n      FROM numbers\r\n      WHERE number between 0 and 81 * 365 + 20\r\n    ) DQ\r\n  ORDER BY 1;\r\n\r\n-- review your data\r\n  select * from dim_date\r\n  order by DateKey;","type":"OTHER","platform":"Snowflake","executed_count":0},{"fqn":"/Community Queries/Greenplum/Data Engineering","id":"356c6a9b-7e6d-4dc4-9d20-c11768dad80b","parent_folder_id":"65bfba1c-b924-49b8-a9cb-edaeb62b6d45","name":"Data Engineering","entity_type":"FOLDER"},{"fqn":"/Community Queries/Greenplum","id":"65bfba1c-b924-49b8-a9cb-edaeb62b6d45","parent_folder_id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","name":"Greenplum","entity_type":"FOLDER"},{"fqn":"/Community Queries/Greenplum/Data Engineering/Generate Date series","id":"845c147d-34ce-45f0-8e26-a2f47816d19a","parent_folder_id":"356c6a9b-7e6d-4dc4-9d20-c11768dad80b","name":"Generate Date series","entity_type":"SQL_ENTITY","description":"","content":"select generate_series(current_date - $days,current_date,INTERVAL '1 day')::date as D","type":"CALCULATION","platform":"Snowflake","executed_count":0}]}